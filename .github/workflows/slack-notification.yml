name: Notify Slack Workflow

on:
  workflow_call:
    inputs:
      GITHUB_USER:
        required: true
        type: string
      PR_URL:
        required: true
        type: string
      PR_TITLE:
        required: true
        type: string
      REPOSITORY:
        required: true
        type: string
      ACTION:
        required: true
        type: string
    secrets:
      SLACK_BOT_TOKEN:
        required: true
      GPG_USER_MAP_PASSPHRASE:
        required: true
      SLACK_CHANNEL_ID:
        required: true

jobs:
  notify:
    runs-on: ubuntu-latest
    env:
      GPG_USER_MAP_PASSPHRASE: ${{ secrets.GPG_USER_MAP_PASSPHRASE }}
      SLACK_CHANNEL_ID: ${{ secrets.SLACK_CHANNEL_ID }}
    steps:
      - name: Decrypt Slack Users Map
        id: slack_id
        run: |
          # Install GPG if not already available
          if ! command -v gpg > /dev/null; then
            sudo apt-get update && sudo apt-get install -y gnupg
          fi
          # Download the user_map.json.gpg from the GitHub repository
          curl -L -o user_map.json.gpg https://raw.githubusercontent.com/bn46/kattu/develop/.github/keys/user_map.json.gpg
          # Decrypt user map file
          gpg --batch --yes --passphrase "$GPG_USER_MAP_PASSPHRASE" --output user_map.json --decrypt user_map.json.gpg
          
          # Read and parse user map
          SLACK_USERS_MAP=$(cat user_map.json)
          
          # Determine GitHub user (actor or pull request initiator)
          GITHUB_USER="${{ inputs.GITHUB_USER }}"
          
          # Extract Slack user ID
          SLACK_USER_ID=$(echo "$SLACK_USERS_MAP" | jq -r --arg user "$GITHUB_USER" '.[$user]')
          
          # Fallback to default Slack channel if user not found
          if [ -z "$SLACK_USER_ID" ] || [ "$SLACK_USER_ID" == "null" ]; then
            SLACK_USER_ID="$SLACK_CHANNEL_ID"
            SLACK_MESSAGE=":warning: *GitHub user $GITHUB_USER not mapped in Slack. Using fallback channel.*\n*PR Notification* :x:"
          else
            SLACK_MESSAGE="*PR Notification* :x:"
          fi
          
          echo "SLACK_USER_ID=$SLACK_USER_ID" >> $GITHUB_ENV
          echo "SLACK_MESSAGE=$SLACK_MESSAGE" >> $GITHUB_ENV

      - name: Notify Slack
        uses: slackapi/slack-github-action@v1.27.0
        with:
          channel-id: ${{ env.SLACK_USER_ID }}
          slack-message: |
            ${{ env.SLACK_MESSAGE }}
            *Repository*: ${{ inputs.REPOSITORY }}
            *Pull Request*: ${{ inputs.PR_TITLE }}
            *Action*: ${{ inputs.ACTION }}
            *PR URL*: ${{ inputs.PR_URL }}
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
